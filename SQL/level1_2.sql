-- 이름에 el이 들어가는 동물 찾기
SELECT ANIMAL_ID, NAME
  FROM ANIMAL_INS
 WHERE animal_type='Dog' AND lower(NAME) LIKE lower('%el%')
 ORDER BY NAME

 -- 아픈 동물 찾기
SELECT ANIMAL_ID, NAME
  FROM ANIMAL_INS
 WHERE INTAKE_CONDITION='Sick'
ORDER BY ANIMAL_ID

-- 어린 동물 찾기
SELECT ANIMAL_ID, NAME
  FROM ANIMAL_INS
 WHERE INTAKE_CONDITION!='Aged'
ORDER BY ANIMAL_ID

-- 상위 n개 레코드
SELECT NAME FROM ANIMAL_INS
ORDER BY DATETIME
LIMIT 1

-- 조건에 맞는 회원수 구하기
SELECT COUNT(*) 
  FROM USER_INFO
 WHERE YEAR(JOINED)="2021"
   AND AGE BETWEEN 20 AND 29

-- 가장 비싼 상품 구하기
SELECT MAX(PRICE) AS MAX_PRICE
  FROM PRODUCT

-- 최댓값 구하기
SELECT MAX(DATETIME) AS 시간
  FROM ANIMAL_INS

-- 최솟값 구하기
SELECT DATETIME
 FROM ANIMAL_INS
ORDER BY DATETIME
LIMIT 1

-- 동물 수 구하기
SELECT count(ANIMAL_ID) 
  FROM ANIMAL_INS

-- 중복 제거하기
SELECT count(DISTINCT NAME)
  FROM ANIMAL_INS
WHERE NAME IS NOT NULL

-- 코드를 입력하세요
SELECT INGREDIENT_TYPE, SUM(F.TOTAL_ORDER)
  FROM FIRST_HALF AS F
INNER JOIN ICECREAM_INFO AS II 
        ON F.FLAVOR= II.FLAVOR
GROUP BY INGREDIENT_TYPE
ORDER BY TOTAL_ORDER ASC

-- 고양이와 개는 몇 마리 있을까
SELECT ANIMAL_TYPE, COUNT(ANIMAL_TYPE)
  FROM ANIMAL_INS
GROUP BY ANIMAL_TYPE
HAVING ANIMAL_TYPE='Cat' OR ANIMAL_TYPE='Dog'
ORDER BY ANIMAL_TYPE

-- 동명 동물 수 찾기
SELECT * 
FROM (SELECT NAME, COUNT(NAME) AS COUNT
        FROM ANIMAL_INS
       WHERE NAME IS NOT NULL
    GROUP BY NAME
    ORDER BY NAME)  A
WHERE COUNT > 1 

-- 년, 월, 성별 별 상품 구매 회원 수 구하기
SELECT YEAR(O.SALES_DATE) AS YEAR
     , MONTH(O.SALES_DATE) AS MONTH
     , U.GENDER AS GENDER
     , COUNT(DISTINCT O.USER_ID) AS USERS
  FROM USER_INFO U, ONLINE_SALE O
 WHERE U.USER_ID = O.USER_ID
    AND GENDER IS NOT NULL
 GROUP BY YEAR, MONTH, GENDER
 ORDER BY YEAR, MONTH, GENDER

-- 입양 시각 구하기(2)
/* WITH : 메모리상에 가상 테이블 저장
   RECURSIVE : 재귀 여부
   tb1 : 가상 테이블명 */
WITH RECURSIVE tb1 AS (
    SELECT 0 AS HOUR -- 초기값 설정
    UNION ALL
    SELECT HOUR+1 FROM tb1 
     WHERE HOUR < 23 -- 반복문의 조건
) , tb2 AS (
    SELECT HOUR(DATETIME) AS HOUR
         , COUNT(DISTINCT ANIMAL_ID) AS CNT
    FROM ANIMAL_OUTS
    GROUP BY HOUR
)
-- ~인 경우 처리 사항
SELECT tb1.HOUR
     , CASE WHEN tb2.CNT IS NULL THEN 0 ELSE CNT END AS CNT
FROM tb1
    -- 상단에서 만든 두가지 가상테이블을 합친다
    LEFT JOIN tb2 ON tb1.HOUR = tb2.HOUR
-- 정렬
ORDER BY HOUR


-- 이름이 있는 동물의 아이디
SELECT ANIMAL_ID 
  FROM ANIMAL_INS
WHERE NAME IS NOT NULL
ORDER BY ANIMAL_ID

-- NULL 처리하기
SELECT ANIMAL_TYPE, IFNULL(NAME, 'No name'), SEX_UPON_INTAKE
FROM ANIMAL_INS
ORDER BY ANIMAL_ID